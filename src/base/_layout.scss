@use '../variables/sizing';

.container, .nav-container {
  max-width: 72rem;
  margin: 0 auto;
  width: 100%;
}

.main-nav {
  width: 100%;
  background: var(--bg-color);
  padding: 0;
  margin-bottom: 2rem;
  border-bottom: 1px solid var(--border-color);
  height: 56px;
  display: flex;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 100;
}

.nav-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1.5rem;
  width: 100%;
  max-width: none;
  margin: 0;
  padding: 0 2rem;
  height: 56px;
}

.nav-logo {
  font-family: 'Inter var', 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  font-size: 1.25rem;
  font-weight: 500;
  color: var(--text-color);
  margin-right: 2rem;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  height: 56px;
}

.nav-items {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  margin: 0;
  padding: 0;
  list-style: none;
  flex: 1;
  justify-content: flex-end;
  max-width: none;
  height: 56px;
}

.nav-item {
  font-family: 'Inter var', 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  font-size: 1rem;
  color: var(--text-color);
  cursor: pointer;
  transition: color 0.2s;
  display: flex;
  align-items: center;
  height: 56px;
  padding: 0;
  margin: 0 !important;
}

.nav-item:hover {
  color: #38adfa;
}

.nav-item.nav-toggle {
  margin-left: 2rem;
  padding: 0;
  height: 56px;
  display: flex;
  align-items: center;
}

section {
  padding-top: map-get(sizing.$spacing, 3);
  padding-bottom: map-get(sizing.$spacing, 3);
}

.nav-link {
  display: block;
  font-family: 'Inter var', 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  font-size: 0.875rem;
  font-weight: 400;
  color: #030712;
  text-decoration: none;
  padding: 0.25rem 0.75rem;
  border-radius: 0.375rem;
  transition: color 0.15s;
  line-height: 1.5;
}

[data-theme="dark"] .nav-link {
  color: #fff;
}

.nav-link:hover,
.nav-link:focus {
  background: none;
  color: #38bdf8;
}

[data-theme="dark"] .nav-link:hover,
[data-theme="dark"] .nav-link:focus {
  background: none;
  color: #38bdf8;
}

// Display classes
$display: (
  inline: inline,
  inline-block: inline-block,
  block: block,
  flex: flex,
  inline-flex: inline-flex,
  grid: grid,
  inline-grid: inline-grid,
  table: table,
  inline-table: inline-table,
  hidden: none
);

@each $key, $value in $display {
  .#{$key} {
    display: $value;
  }
}

//Screen reader only classes
.sr-only{
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.not-sr-only{
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;  
}

// Flexbox Direction
$flex-directions: (
  row: row,
  row-reverse: row-reverse,
  col: column,
  col-reverse: column-reverse
);

@each $name, $value in $flex-directions {
  .flex-#{$name} {
    flex-direction: #{$value};
  }
}

// Flexbox Wrap
$flex-wraps: (
  wrap: wrap,
  nowrap: nowrap
);

@each $name, $value in $flex-wraps {
  .flex-#{$name} {
    flex-wrap: #{$value};
  }
}

//Grid Columns
@for $i from 1 through 12 {
  .grid-cols-#{$i} {    
    grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
  }
}

// Grid Col Spans, Grid Row Spans, Flex Grow
@for $i from 1 through 12 {
  .col-span-#{$i} {
    grid-column: span #{$i} / span #{$i};
  }
  .row-span-#{$i} {
    grid-row: span #{$i} / span #{$i};
  }
  .flex-grow-#{$i} {
    flex-grow: #{$i};
  }
}

//Align Items Utilities
$align-items: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch,
  baseline: baseline
);

@each $name, $value in $align-items {
  .items-#{$name} {
    align-items: #{$value} !important;
  }
}

$self-alignments: (
  auto: auto,
  start: flex-start,
  end: flex-end,  
  center: center, 
  stretch: stretch,
  baseline: baseline, 
);

@each $name, $value in $self-alignments {
  .self-#{$name} {
    align-self: #{$value};
  }
}

// Justify Content Utilities
$justify-content: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
  evenly: space-evenly
);

@each $name, $value in $justify-content {
  .justify-#{$name} {
    justify-content: #{$value};
  }
}

@each $key, $value in sizing.$spacing {
  .gap-#{$key} {
    gap: #{$value} !important;
  }
  .gap-x-#{$key} {
    column-gap: #{$value} !important;
  }
  .gap-y-#{$key} {
    row-gap: #{$value} !important;
  }
}

.collapsible-content {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease-out;
}
.collapsible-content.expanded {
  max-height: 2000px; // or a value large enough for your content
  transition: max-height 0.5s ease-in;
}

// Max-height utilities
.max-h-0 {
  max-height: 0 !important;
}
.max-h-2000 {
  max-height: 2000px !important;
}

// Transition utilities
.transition-max-height {
  transition: max-height 0.3s ease-out !important;
}
.transition-max-height-in {
  transition: max-height 0.5s ease-in !important;
}

// Position utilities
.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

// Object fit
.object-contain {
  object-fit: contain;
}

.object-cover {
  object-fit: cover;
}

.object-fill {
  object-fit: fill;
}

.object-none {
  object-fit: none;
}

.object-scale-down {
  object-fit: scale-down;
}

// Object position
.object-center {
  object-position: center;
}

.object-top {
  object-position: top;
}

.object-bottom {
  object-position: bottom;
}

.object-left {
  object-position: left;
}

.object-right {
  object-position: right;
}